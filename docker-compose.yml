version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres-workshop
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: twoje_haslo
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin-workshop
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      postgres:
        condition: service_healthy

  # ✅ POPRAWKA: Workshop service na porcie 5100
  workshop-service:
    image: mcr.microsoft.com/dotnet/sdk:8.0
    container_name: workshop-service
    working_dir: /src
    command: ["dotnet", "run", "--urls", "http://0.0.0.0:80", "--project", "WorkshopBooker.Api/WorkshopBooker.Api.csproj"]
    volumes:
      - ./src:/src
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: Server=postgres;Port=5432;Database=WorkshopDb;User Id=postgres;Password=twoje_haslo;
    ports:
      - "5100:80"  # ✅ ZMIENIONO z 5000 na 5100
    depends_on:
      postgres:
        condition: service_healthy

  # ✅ POPRAWKA: Emergency service z własną bazą
  emergency-db:
    image: postgres:13
    container_name: emergency-db
    environment:
      POSTGRES_DB: emergency_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  emergency-service:
    image: mcr.microsoft.com/dotnet/sdk:8.0
    container_name: emergency-service
    working_dir: /src
    command: ["dotnet", "run", "--urls", "http://0.0.0.0:80", "--project", "Services/Emergency/WorkshopBooker.Emergency.Api/WorkshopBooker.Emergency.Api.csproj"]
    volumes:
      - ./src:/src
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__EmergencyConnection: Server=emergency-db;Port=5432;Database=emergency_db;User Id=admin;Password=password;
    ports:
      - "5001:80"  # ✅ POPRAWIONE
    depends_on:
      emergency-db:
        condition: service_healthy

  # ✅ POPRAWKA: Insurance service
  insurance-service:
    image: mcr.microsoft.com/dotnet/sdk:8.0
    container_name: insurance-service
    working_dir: /src
    command: ["dotnet", "run", "--urls", "http://0.0.0.0:80", "--project", "Services/Insurance/WorkshopBooker.Insurance.Api/WorkshopBooker.Insurance.Api.csproj"]
    volumes:
      - ./src:/src
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - "5002:80"

  # ✅ POPRAWKA: Legal service
  legal-service:
    image: mcr.microsoft.com/dotnet/sdk:8.0
    container_name: legal-service
    working_dir: /src
    command: ["dotnet", "run", "--urls", "http://0.0.0.0:80", "--project", "Services/Legal/WorkshopBooker.Legal.Api/WorkshopBooker.Legal.Api.csproj"]
    volumes:
      - ./src:/src
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - "5003:80"

  # ✅ POPRAWKA: API Gateway na porcie 5000
  api-gateway:
    image: mcr.microsoft.com/dotnet/sdk:8.0
    container_name: api-gateway
    working_dir: /src
    command: ["dotnet", "run", "--urls", "http://0.0.0.0:80", "--project", "Gateway/WorkshopBooker.Gateway/WorkshopBooker.Gateway.csproj"]
    volumes:
      - ./src:/src
    ports:
      - "5000:80"  # ✅ Gateway jako główny punkt wejścia
    depends_on:
      workshop-service:
        condition: service_started
      emergency-service:
        condition: service_started
      insurance-service:
        condition: service_started
      legal-service:
        condition: service_started

  web-app:
    image: node:18
    container_name: web-app
    working_dir: /app
    command: ["npm", "run", "dev"]
    volumes:
      - ./frontend/client:/app
    environment:
      API_GATEWAY_URL: http://api-gateway:80
      NEXT_PUBLIC_API_GATEWAY_URL: http://localhost:5000  # ✅ POPRAWIONE
    ports:
      - "3000:3000"
    depends_on:
      api-gateway:
        condition: service_started

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

volumes:
  postgres_data:
